// code
.markdown-rendered pre {
    position: relative;
    padding: var(--size-4-3) var(--size-4-4);
    min-height: 38px;
    background-color: var(--code-background);
    border-radius: var(--code-radius);
    white-space: var(--code-white-space);
    overflow-x: auto;
  }
  .markdown-rendered pre code {
    border: none;
    padding: 0;
    background-color: transparent;
  }
  .markdown-rendered pre:not(:hover) > button.copy-code-button {
    display: none;
  }
  .markdown-rendered button.copy-code-button {
    margin: 6px;
    padding: 6px 8px;
    height: auto;
    background-color: transparent;
    box-shadow: none;
    color: var(--text-muted);
    font-size: var(--font-ui-smaller);
    font-family: var(--font-interface);
    position: absolute;
    top: 0;
    inset-inline-end: 0;
  }
  @media (hover: hover) {
    .markdown-rendered button.copy-code-button:hover {
      background-color: var(--background-modifier-hover);
    }
  }
  code[class*="language-"],
  pre[class*="language-"] {
    color: var(--code-normal);
    background: none;
    word-wrap: break-word;
    white-space: pre-wrap;
    word-break: normal;
    direction: ltr;
    font-family: var(--font-monospace);
    text-align: left;
    word-spacing: normal;
    line-height: var(--line-height-normal);
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
  }
  @media print {
    code[class*="language-"],
    pre[class*="language-"] {
      text-shadow: none;
    }
  }
  :not(pre) > code[class*="language-"],
  pre[class*="language-"] {
    background: var(--code-background);
  }
  /* Code blocks */
  pre[class*="language-"] {
    overflow: hidden;
  }
  code[class*="language-"] {
    display: block;
    padding: 1em;
    overflow: auto;
  }
  /* Inline code */
  :not(pre) > code[class*="language-"] {
    padding: 0.1em;
    border-radius: 0.3em;
    white-space: normal;
  }
  .token.important,
  .token.bold {
    font-weight: bold;
  }
  .token.italic {
    font-style: italic;
  }
  .token.entity {
    cursor: help;
  }
  /* Syntax highlighting */
  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: var(--code-comment);
  }
  .token.namespace {
    opacity: 0.7;
  }
  .token.tag,
  .token.constant,
  .token.symbol,
  .token.deleted {
    color: var(--code-tag);
  }
  .token.punctuation {
    color: var(--code-punctuation);
  }
  .token.boolean,
  .token.number {
    color: var(--code-value);
  }
  .token.selector,
  .token.attr-name,
  .token.string,
  .token.char,
  .token.inserted {
    color: var(--code-string);
  }
  .token.operator {
    color: var(--code-operator);
  }
  .token.entity,
  .token.parameter,
  .token.property,
  .token.url,
  .language-css .token.string,
  .style .token.string,
  .token.variable {
    color: var(--code-property);
  }
  .token.atrule,
  .token.attr-value,
  .token.builtin,
  .token.function,
  .token.class-name,
  .token.property-access {
    color: var(--code-function);
  }
  .token.keyword {
    color: var(--code-keyword);
  }
  .token.regex,
  .token.important {
    color: var(--code-important);
  }
  .markdown-rendered code {
    color: var(--code-normal);
    font-family: var(--font-monospace);
    background-color: var(--code-background);
    border-radius: var(--code-radius);
    font-size: var(--code-size);
    padding: 0.1em 0.25em;
    -webkit-box-decoration-break: clone;
  }